// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CustomPool extends ethereum.Event {
  get params(): CustomPool__Params {
    return new CustomPool__Params(this);
  }
}

export class CustomPool__Params {
  _event: CustomPool;

  constructor(event: CustomPool) {
    this._event = event;
  }

  get deployer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token0(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class DefaultCommunityFee extends ethereum.Event {
  get params(): DefaultCommunityFee__Params {
    return new DefaultCommunityFee__Params(this);
  }
}

export class DefaultCommunityFee__Params {
  _event: DefaultCommunityFee;

  constructor(event: DefaultCommunityFee) {
    this._event = event;
  }

  get newDefaultCommunityFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class DefaultFee extends ethereum.Event {
  get params(): DefaultFee__Params {
    return new DefaultFee__Params(this);
  }
}

export class DefaultFee__Params {
  _event: DefaultFee;

  constructor(event: DefaultFee) {
    this._event = event;
  }

  get newDefaultFee(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class DefaultPluginFactory extends ethereum.Event {
  get params(): DefaultPluginFactory__Params {
    return new DefaultPluginFactory__Params(this);
  }
}

export class DefaultPluginFactory__Params {
  _event: DefaultPluginFactory;

  constructor(event: DefaultPluginFactory) {
    this._event = event;
  }

  get defaultPluginFactoryAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DefaultTickspacing extends ethereum.Event {
  get params(): DefaultTickspacing__Params {
    return new DefaultTickspacing__Params(this);
  }
}

export class DefaultTickspacing__Params {
  _event: DefaultTickspacing;

  constructor(event: DefaultTickspacing) {
    this._event = event;
  }

  get newDefaultTickspacing(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Pool extends ethereum.Event {
  get params(): Pool__Params {
    return new Pool__Params(this);
  }
}

export class Pool__Params {
  _event: Pool;

  constructor(event: Pool) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pool(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RenounceOwnershipFinish extends ethereum.Event {
  get params(): RenounceOwnershipFinish__Params {
    return new RenounceOwnershipFinish__Params(this);
  }
}

export class RenounceOwnershipFinish__Params {
  _event: RenounceOwnershipFinish;

  constructor(event: RenounceOwnershipFinish) {
    this._event = event;
  }

  get timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RenounceOwnershipStart extends ethereum.Event {
  get params(): RenounceOwnershipStart__Params {
    return new RenounceOwnershipStart__Params(this);
  }
}

export class RenounceOwnershipStart__Params {
  _event: RenounceOwnershipStart;

  constructor(event: RenounceOwnershipStart) {
    this._event = event;
  }

  get timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get finishTimestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RenounceOwnershipStop extends ethereum.Event {
  get params(): RenounceOwnershipStop__Params {
    return new RenounceOwnershipStop__Params(this);
  }
}

export class RenounceOwnershipStop__Params {
  _event: RenounceOwnershipStop;

  constructor(event: RenounceOwnershipStop) {
    this._event = event;
  }

  get timestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VaultFactory extends ethereum.Event {
  get params(): VaultFactory__Params {
    return new VaultFactory__Params(this);
  }
}

export class VaultFactory__Params {
  _event: VaultFactory;

  constructor(event: VaultFactory) {
    this._event = event;
  }

  get newVaultFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory__defaultConfigurationForPoolResult {
  value0: i32;
  value1: i32;
  value2: i32;

  constructor(value0: i32, value1: i32, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromI32(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }

  getCommunityFee(): i32 {
    return this.value0;
  }

  getTickSpacing(): i32 {
    return this.value1;
  }

  getFee(): i32 {
    return this.value2;
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  CUSTOM_POOL_DEPLOYER(): Bytes {
    let result = super.call(
      "CUSTOM_POOL_DEPLOYER",
      "CUSTOM_POOL_DEPLOYER():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CUSTOM_POOL_DEPLOYER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CUSTOM_POOL_DEPLOYER",
      "CUSTOM_POOL_DEPLOYER():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  POOLS_ADMINISTRATOR_ROLE(): Bytes {
    let result = super.call(
      "POOLS_ADMINISTRATOR_ROLE",
      "POOLS_ADMINISTRATOR_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_POOLS_ADMINISTRATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "POOLS_ADMINISTRATOR_ROLE",
      "POOLS_ADMINISTRATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  POOL_INIT_CODE_HASH(): Bytes {
    let result = super.call(
      "POOL_INIT_CODE_HASH",
      "POOL_INIT_CODE_HASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_POOL_INIT_CODE_HASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "POOL_INIT_CODE_HASH",
      "POOL_INIT_CODE_HASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  computeCustomPoolAddress(
    deployer: Address,
    token0: Address,
    token1: Address
  ): Address {
    let result = super.call(
      "computeCustomPoolAddress",
      "computeCustomPoolAddress(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(deployer),
        ethereum.Value.fromAddress(token0),
        ethereum.Value.fromAddress(token1)
      ]
    );

    return result[0].toAddress();
  }

  try_computeCustomPoolAddress(
    deployer: Address,
    token0: Address,
    token1: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "computeCustomPoolAddress",
      "computeCustomPoolAddress(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(deployer),
        ethereum.Value.fromAddress(token0),
        ethereum.Value.fromAddress(token1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  computePoolAddress(token0: Address, token1: Address): Address {
    let result = super.call(
      "computePoolAddress",
      "computePoolAddress(address,address):(address)",
      [ethereum.Value.fromAddress(token0), ethereum.Value.fromAddress(token1)]
    );

    return result[0].toAddress();
  }

  try_computePoolAddress(
    token0: Address,
    token1: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "computePoolAddress",
      "computePoolAddress(address,address):(address)",
      [ethereum.Value.fromAddress(token0), ethereum.Value.fromAddress(token1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createCustomPool(
    deployer: Address,
    creator: Address,
    tokenA: Address,
    tokenB: Address,
    data: Bytes
  ): Address {
    let result = super.call(
      "createCustomPool",
      "createCustomPool(address,address,address,address,bytes):(address)",
      [
        ethereum.Value.fromAddress(deployer),
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toAddress();
  }

  try_createCustomPool(
    deployer: Address,
    creator: Address,
    tokenA: Address,
    tokenB: Address,
    data: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createCustomPool",
      "createCustomPool(address,address,address,address,bytes):(address)",
      [
        ethereum.Value.fromAddress(deployer),
        ethereum.Value.fromAddress(creator),
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createPool(tokenA: Address, tokenB: Address): Address {
    let result = super.call(
      "createPool",
      "createPool(address,address):(address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );

    return result[0].toAddress();
  }

  try_createPool(
    tokenA: Address,
    tokenB: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createPool",
      "createPool(address,address):(address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  customPoolByPair(param0: Address, param1: Address, param2: Address): Address {
    let result = super.call(
      "customPoolByPair",
      "customPoolByPair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toAddress();
  }

  try_customPoolByPair(
    param0: Address,
    param1: Address,
    param2: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "customPoolByPair",
      "customPoolByPair(address,address,address):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultCommunityFee(): i32 {
    let result = super.call(
      "defaultCommunityFee",
      "defaultCommunityFee():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_defaultCommunityFee(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "defaultCommunityFee",
      "defaultCommunityFee():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  defaultConfigurationForPool(): Factory__defaultConfigurationForPoolResult {
    let result = super.call(
      "defaultConfigurationForPool",
      "defaultConfigurationForPool():(uint16,int24,uint16)",
      []
    );

    return new Factory__defaultConfigurationForPoolResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32()
    );
  }

  try_defaultConfigurationForPool(): ethereum.CallResult<
    Factory__defaultConfigurationForPoolResult
  > {
    let result = super.tryCall(
      "defaultConfigurationForPool",
      "defaultConfigurationForPool():(uint16,int24,uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Factory__defaultConfigurationForPoolResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32()
      )
    );
  }

  defaultFee(): i32 {
    let result = super.call("defaultFee", "defaultFee():(uint16)", []);

    return result[0].toI32();
  }

  try_defaultFee(): ethereum.CallResult<i32> {
    let result = super.tryCall("defaultFee", "defaultFee():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  defaultPluginFactory(): Address {
    let result = super.call(
      "defaultPluginFactory",
      "defaultPluginFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_defaultPluginFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "defaultPluginFactory",
      "defaultPluginFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultTickspacing(): i32 {
    let result = super.call(
      "defaultTickspacing",
      "defaultTickspacing():(int24)",
      []
    );

    return result[0].toI32();
  }

  try_defaultTickspacing(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "defaultTickspacing",
      "defaultTickspacing():(int24)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRoleOrOwner(role: Bytes, account: Address): boolean {
    let result = super.call(
      "hasRoleOrOwner",
      "hasRoleOrOwner(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(role), ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_hasRoleOrOwner(
    role: Bytes,
    account: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasRoleOrOwner",
      "hasRoleOrOwner(bytes32,address):(bool)",
      [ethereum.Value.fromFixedBytes(role), ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolByPair(param0: Address, param1: Address): Address {
    let result = super.call(
      "poolByPair",
      "poolByPair(address,address):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toAddress();
  }

  try_poolByPair(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "poolByPair",
      "poolByPair(address,address):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolDeployer(): Address {
    let result = super.call("poolDeployer", "poolDeployer():(address)", []);

    return result[0].toAddress();
  }

  try_poolDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolDeployer", "poolDeployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  renounceOwnershipStartTimestamp(): BigInt {
    let result = super.call(
      "renounceOwnershipStartTimestamp",
      "renounceOwnershipStartTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_renounceOwnershipStartTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "renounceOwnershipStartTimestamp",
      "renounceOwnershipStartTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vaultFactory(): Address {
    let result = super.call("vaultFactory", "vaultFactory():(address)", []);

    return result[0].toAddress();
  }

  try_vaultFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("vaultFactory", "vaultFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _poolDeployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class CreateCustomPoolCall extends ethereum.Call {
  get inputs(): CreateCustomPoolCall__Inputs {
    return new CreateCustomPoolCall__Inputs(this);
  }

  get outputs(): CreateCustomPoolCall__Outputs {
    return new CreateCustomPoolCall__Outputs(this);
  }
}

export class CreateCustomPoolCall__Inputs {
  _call: CreateCustomPoolCall;

  constructor(call: CreateCustomPoolCall) {
    this._call = call;
  }

  get deployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenA(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CreateCustomPoolCall__Outputs {
  _call: CreateCustomPoolCall;

  constructor(call: CreateCustomPoolCall) {
    this._call = call;
  }

  get customPool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetDefaultCommunityFeeCall extends ethereum.Call {
  get inputs(): SetDefaultCommunityFeeCall__Inputs {
    return new SetDefaultCommunityFeeCall__Inputs(this);
  }

  get outputs(): SetDefaultCommunityFeeCall__Outputs {
    return new SetDefaultCommunityFeeCall__Outputs(this);
  }
}

export class SetDefaultCommunityFeeCall__Inputs {
  _call: SetDefaultCommunityFeeCall;

  constructor(call: SetDefaultCommunityFeeCall) {
    this._call = call;
  }

  get newDefaultCommunityFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetDefaultCommunityFeeCall__Outputs {
  _call: SetDefaultCommunityFeeCall;

  constructor(call: SetDefaultCommunityFeeCall) {
    this._call = call;
  }
}

export class SetDefaultFeeCall extends ethereum.Call {
  get inputs(): SetDefaultFeeCall__Inputs {
    return new SetDefaultFeeCall__Inputs(this);
  }

  get outputs(): SetDefaultFeeCall__Outputs {
    return new SetDefaultFeeCall__Outputs(this);
  }
}

export class SetDefaultFeeCall__Inputs {
  _call: SetDefaultFeeCall;

  constructor(call: SetDefaultFeeCall) {
    this._call = call;
  }

  get newDefaultFee(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetDefaultFeeCall__Outputs {
  _call: SetDefaultFeeCall;

  constructor(call: SetDefaultFeeCall) {
    this._call = call;
  }
}

export class SetDefaultPluginFactoryCall extends ethereum.Call {
  get inputs(): SetDefaultPluginFactoryCall__Inputs {
    return new SetDefaultPluginFactoryCall__Inputs(this);
  }

  get outputs(): SetDefaultPluginFactoryCall__Outputs {
    return new SetDefaultPluginFactoryCall__Outputs(this);
  }
}

export class SetDefaultPluginFactoryCall__Inputs {
  _call: SetDefaultPluginFactoryCall;

  constructor(call: SetDefaultPluginFactoryCall) {
    this._call = call;
  }

  get newDefaultPluginFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDefaultPluginFactoryCall__Outputs {
  _call: SetDefaultPluginFactoryCall;

  constructor(call: SetDefaultPluginFactoryCall) {
    this._call = call;
  }
}

export class SetDefaultTickspacingCall extends ethereum.Call {
  get inputs(): SetDefaultTickspacingCall__Inputs {
    return new SetDefaultTickspacingCall__Inputs(this);
  }

  get outputs(): SetDefaultTickspacingCall__Outputs {
    return new SetDefaultTickspacingCall__Outputs(this);
  }
}

export class SetDefaultTickspacingCall__Inputs {
  _call: SetDefaultTickspacingCall;

  constructor(call: SetDefaultTickspacingCall) {
    this._call = call;
  }

  get newDefaultTickspacing(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetDefaultTickspacingCall__Outputs {
  _call: SetDefaultTickspacingCall;

  constructor(call: SetDefaultTickspacingCall) {
    this._call = call;
  }
}

export class SetVaultFactoryCall extends ethereum.Call {
  get inputs(): SetVaultFactoryCall__Inputs {
    return new SetVaultFactoryCall__Inputs(this);
  }

  get outputs(): SetVaultFactoryCall__Outputs {
    return new SetVaultFactoryCall__Outputs(this);
  }
}

export class SetVaultFactoryCall__Inputs {
  _call: SetVaultFactoryCall;

  constructor(call: SetVaultFactoryCall) {
    this._call = call;
  }

  get newVaultFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVaultFactoryCall__Outputs {
  _call: SetVaultFactoryCall;

  constructor(call: SetVaultFactoryCall) {
    this._call = call;
  }
}

export class StartRenounceOwnershipCall extends ethereum.Call {
  get inputs(): StartRenounceOwnershipCall__Inputs {
    return new StartRenounceOwnershipCall__Inputs(this);
  }

  get outputs(): StartRenounceOwnershipCall__Outputs {
    return new StartRenounceOwnershipCall__Outputs(this);
  }
}

export class StartRenounceOwnershipCall__Inputs {
  _call: StartRenounceOwnershipCall;

  constructor(call: StartRenounceOwnershipCall) {
    this._call = call;
  }
}

export class StartRenounceOwnershipCall__Outputs {
  _call: StartRenounceOwnershipCall;

  constructor(call: StartRenounceOwnershipCall) {
    this._call = call;
  }
}

export class StopRenounceOwnershipCall extends ethereum.Call {
  get inputs(): StopRenounceOwnershipCall__Inputs {
    return new StopRenounceOwnershipCall__Inputs(this);
  }

  get outputs(): StopRenounceOwnershipCall__Outputs {
    return new StopRenounceOwnershipCall__Outputs(this);
  }
}

export class StopRenounceOwnershipCall__Inputs {
  _call: StopRenounceOwnershipCall;

  constructor(call: StopRenounceOwnershipCall) {
    this._call = call;
  }
}

export class StopRenounceOwnershipCall__Outputs {
  _call: StopRenounceOwnershipCall;

  constructor(call: StopRenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
